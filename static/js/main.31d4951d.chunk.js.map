{"version":3,"sources":["Type.ts","HomepageLayout.js","Menu/MenuBar.tsx","Menu/Footer.tsx","Transfer/Balances.tsx","Menu/NodeInfo.tsx","Transfer/Transfer.tsx","Vote/createVote.tsx","Vote/VoteListings.tsx","Vote/castBallot.tsx","Vote/concludeVote.tsx","Vote/ResultChart.tsx","Vote/VoteView.tsx","Certificate/Provider.tsx","Certificate/Register.tsx","Certificate/RegisterCA.tsx","Certificate/CAListings.tsx","Certificate/Certificate.tsx","Tutorial/SideBar.tsx","Tutorial/Docs/Home.tsx","Tutorial/Tutorial.tsx","Certificate/CertificateView.tsx","index.tsx","App.tsx","Certificate/pkijshelpers.tsx","Vote/helper.tsx","images/headerImage.jpg","images/image-01.jpg","images/logo.png"],"names":["types","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","headerStyle","backgroundImage","headerImage","backgroundSize","backgroundPosition","HomepageHeading","mobile","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","to","Button","primary","size","Icon","name","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Component","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","ResponsiveContainer","HomepageLayout","Grid","container","stackable","verticalAlign","Row","Column","width","floated","Image","bordered","rounded","src","image1","celled","columns","paddingBottom","paddingTop","Divider","className","horizontal","margin","textTransform","href","MenuBar","useState","activeItem","setActiveItem","handleItemClick","e","Menu","fluid","widths","Item","Link","active","onClick","Input","icon","placeholder","Footer","divided","List","link","target","Balances","api","accounts","keyring","getPairs","addresses","map","account","address","accountNames","meta","balances","setBalances","useEffect","unsubscribeAll","query","freeBalance","multi","currentBalances","balancesMap","reduce","acc","index","toString","then","unsub","catch","console","error","Table","striped","HeaderCell","Body","key","Cell","NodeInfo","blockNumber","chain","nodeName","nodeVersion","nodeInfo","setNodeInfo","Promise","all","rpc","system","version","colums","circular","centered","logo","Transfer","header","success","warning","message","setMessage","addressFrom","addressTo","amount","formState","setFormState","keyringOptions","value","toUpperCase","onChange","_","data","Form","Field","Dropdown","label","search","selection","options","type","fromPair","getPair","tx","transfer","signAndSend","status","isFinalized","asFinalized","Message","helper","require","voteTypeOptions","CreateVote","voteType","expLength","approved","vals","setVals","caOptions","setCaOptions","FormState","onChangeOption","prev","unsubscribe","certificateModule","cAData","dataList","parseInt","hex2a","count","setCount","onClickOption","Group","disabled","negative","Array","keys","x","val","i","Object","values","governanceModule","createVote","VoteListings","voteCountState","setVoteCountState","votes","setVotes","arrayState","setArrayState","allVoteCount","words","voteArray","votesByIndex","vote","id","vote_type","creator","when","vote_ends","concluded","typeOfVote","color","bool","CastBallot","initialState","reference_id","ballot","ballotOptions","v","castBallotWithOptions","ConcludeVote","isExpired","isConcluded","isSelected","clickable","setClickable","concludeVote","isDisabled","ResultChart","labels","datasets","length","backgroundColor","hoverBackgroundColor","VoteView","useParams","voteState","setVoteState","optionState","setOptionState","setAccounts","panes","menuItem","render","Tab","Pane","voteView","a","async","queryMulti","voteOptions","getAccounts","optionArr","accountsByOption","float","paddingLeft","clear","listStyleType","option","menu","jwkToPem","utils","Provider","ws","wsReady","selectedProvider","setSelectedProvider","providerOptions","setProviderOptions","providers","setProviders","items","setItems","fillProviders","info","oldValues","atr","getItems","providerId","getCrypto","crypto","reset","isLoggedIn","login","certStorage","indexes","getItem","item","publicKey","subjectName","keyStorage","algorithm","connect","on","challenge","pin","setTimeout","alert","cardReader","provider","preventDefault","parts","split","exportCert","pem","subtle","exportKey","jwk","hex","Convert","ToHex","log","downloadItem","Dimmer","Loader","pkiJS","Register","CAOptions","setStatus","certificateIndex","hexThumbSignature","privateKeyIndex","CAIndex","certificateOptions","setCertificateOptions","verified","validated","requirements","setRequirements","validateStatus","setValidateStatus","verify","signature","GetCertificateKey","alg","hash","spki","importKey","rsassaPublicKey","ok","privateKeys","getKey","push","getCert","certs","keyId","keyParts","cert","certParts","GetCommonName","certID","keyIDs","keyID","getColor","privateKey","FromUtf8String","sign","rawSignature","digest","thumbSignature","whiteSpace","userPem","userRaw","createPKIJSCertificate","cAStore","caPem2","caRaw","chainValidator","CertificateChainValidationEngine","trustedCerts","result","resultCode","resultMessage","rawCert","thumbCert","hexThumbCert","caPem","tbs","thumbCA","hexThumbCA","registerAccount","res","exec","RegisterCA","control","TextArea","rawCA","unarmored","removePemArmoring","registerCa","CAListings","caCount","setCaCount","hashState","setHashState","cAHashes","caHashes","urls","Certificate","setWs","setWsReady","tag","document","createElement","getElementsByTagName","appendChild","ca_data","WebcryptoSocket","init","SocketProvider","BrowserStorage","create","storage","SideBar","Home","lineHeight","Tutorial","getDoc","pemStyle","height","border","font","overflow","CertificateView","setData","setPem","setRawCA","accountsByCAHash","cADataByIndex","hexPem","notBefore","notAfter","issuer","typesAndValues","valueBlock","replace","ReactDOM","setApi","apiReady","setApiReady","setBlockNumber","WsProvider","ApiPromise","isReady","loadAll","isDevelopment","subscribeNewHeads","number","path","getElementById","asn1js","certArrayBuffer","pemString","buffer","Buffer","from","Uint8Array","convertPemToArrayBuffer","asn1data","fromBER","schema","trim","hexx","str","substr","String","fromCharCode","module","exports"],"mappings":"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","file":"static/js/main.31d4951d.chunk.js","sourcesContent":["const types ={\n  \"ReferenceIndex\": \"u64\",\n  \"data\": \"Vec<u8>\",\n  \"Vote\": {\n    \"id\": \"u64\",\n    \"vote_type\": \"u8\",\n    \"approved\": \"Hash\",\n    \"creator\": \"AccountId\",\n    \"when\": \"BlockNumber\",\n    \"vote_ends\": \"BlockNumber\",\n    \"concluded\": \"bool\"\n  },\n  \"LockInfo\": {\n    \"deposit\": \"BalanceOf\",\n    \"duration\": \"BlockNumber\",\n    \"until\": \"BlockNumber\"\n  },\n  \"Ballot\": {\n    \"_enum\": [\n      \"Aye\",\n      \"Nay\"\n    ]\n  },\n  \"Certification\": {\n    \"cert\": \"Hash\",\n    \"signature\": \"Hash\"\n  },\n  \"CentralAuthority\": {\n    \"ca_hash\": \"Hash\",\n    \"data\": \"Vec<u8>\"\n  }\n}\n\nexport default types;","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport headerImage from './images/headerImage.jpg'\nimport image1 from './images/image-01.jpg';\n\n// Heads up!\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nconst headerStyle = {\n  backgroundImage: `linear-gradient( rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5) ), url(${headerImage})`, \n  backgroundSize: 'contain', \n  backgroundPosition:'center', \n}\n\n/* eslint-disable react/no-multi-comp */\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n    <Header\n      as='h1'\n      content='M-Governance'\n      inverted\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        marginTop: mobile ? '1.5em' : '3em',\n      }}\n    />\n    <Header\n      as='h2'\n      content='Next Autonomous Decision Making Platform Powered by Substrate and Polkadot.'\n      inverted\n      style={{\n        fontSize: mobile ? '1.5em' : '1.7em',\n        fontWeight: 'normal',\n        marginTop: mobile ? '0.5em' : '1.5em',\n      }}\n    />\n    <Link to=\"/vote\"><Button primary size='huge'>\n      Create Your First Vote\n      <Icon name='right arrow' />\n    </Button></Link>\n  </Container>\n)\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical\n            style = {headerStyle}\n          >\n            <HomepageHeading />\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n      </Responsive>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst HomepageLayout = () => (\n  <ResponsiveContainer>\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Grid container stackable verticalAlign='middle'>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              Vote that can scale with existing blockchains. Modular and fully customizable.\n            </Header> \n            <p style={{ fontSize: '1.33em' }}>\n              M-Governance is both an independent blockchain and one of many parachains on Polkadot, which is the next Internet of Blockchain.\n            </p>\n            <Header as='h3' style={{ fontSize: '2em' }}>\n              Flexible and Customizable\n            </Header>\n            <p style={{ fontSize: '1.33em' }}>\n              You can choose cutting-edge voting mechanisms which best fit your needs.\n            </p>\n          </Grid.Column>\n          <Grid.Column floated='right' width={6}>\n            <Image bordered rounded size='large' src={image1}/>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign='center'>\n            <Link to=\"/tutorial\"><Button size='huge'>Go to Tutorial\n              <Icon name='right arrow' />\n            </Button></Link>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    <Segment style={{ padding: '0em' }} vertical>\n      <Grid celled='internally' columns='equal' stackable>\n        <Grid.Row textAlign='center'>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '3em' }}>\n              Compatible with many parachains on Polkadot\n            </Header>\n            <p style={{ fontSize: '2em' }}>Validated voting result can be used to trigger next event through Polkadot. </p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n            <Header as='h3' style={{ fontSize: '3em' }}>\n              Various voting tools and models\n            </Header>\n            <p style={{ fontSize: '2em' }}>\n              Quadratic Voting, Lock Voting, Normal Voting\n              {/* <Image avatar src={image2} />\n              <b>Rick</b> Chief Technology Officer */}\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    <Segment style={{ padding: '8em 0em' }} vertical>\n      <Container text>\n        <Header as='h3' style={{ fontSize: '2em' }}>\n          Register your certificate to join permitted voting.\n        </Header>\n        <p style={{ fontSize: '1.33em' }}>\n          From certificate tab, you can register your digital certificate to allow only those who have signed certificate to participate the voting. For example, you can register your country's national identity smart card to participate next municipal election voting process.\n          You need Fortify app to interect with your smartcard. For more detail, please follow this link.\n        </p>\n        <Link to=\"/certificate\"><Button size='large'>\n          Register Certificate\n        </Button></Link>\n        <Divider\n          as='h4'\n          className='header'\n          horizontal\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n        >\n          <a href='#'>Case Studies</a>\n        </Divider>\n        <Header as='h3' style={{ fontSize: '2em' }}>\n          M-Governance is compatible with Substrate account system. \n        </Header>\n        <p style={{ fontSize: '1.33em' }}>\n          You can use third-party extension to insert your account. Polkadot.js is an extension like a Metamask but for substrate based app. \n        </p>\n        <Button as='a' size='large'>\n          I'm Still Quite Interested\n        </Button>\n      </Container>\n    </Segment>\n  </ResponsiveContainer>\n)\nexport default HomepageLayout","import React, {useState} from 'react';\nimport { Menu, Icon, Input, MenuItemProps } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default function MenuBar() {\n  const [activeItem, setActiveItem] = useState<string>('');\n  const handleItemClick = (e: any,  { name }: MenuItemProps) => setActiveItem(name!);\n\n  return(\n    <Menu fluid widths={6}>\n      <Menu.Item \n      as={Link} to='/' name='home'\n      active={activeItem === 'home'}\n      onClick={handleItemClick}\n      >\n          <Icon name='home' />\n          Home\n      </Menu.Item>\n      <Menu.Item \n      as={Link} to='/tutorial' name='tutorial'\n      active={activeItem === 'tutorial'}\n      onClick={handleItemClick}>\n          <Icon name='inbox' />\n          Tutorial\n      </Menu.Item>\n      <Menu.Item \n      as={Link} to='/vote' name='vote'\n      active={activeItem === 'vote'}\n      onClick={handleItemClick}>\n          <Icon name='th' />\n          Vote\n      </Menu.Item>\n      <Menu.Item \n      as={Link} to='/transfer' name='transfer'\n      active={activeItem === 'transfer'}\n      onClick={handleItemClick}>\n          <Icon name='paper plane' />\n          Transfer\n      </Menu.Item>\n      <Menu.Item \n      as={Link} to='/certificate' name='certificate'\n      active={activeItem === 'certificate'}\n      onClick={handleItemClick}>\n          <Icon name='certificate' />\n          Certificate\n      </Menu.Item>\n\n      <Menu.Item>\n        <Input icon='search' placeholder='Vote ID...' />\n      </Menu.Item>\n    </Menu>\n  );\n}","import React from 'react';\nimport { Segment, Container, Grid, Header, List, Icon } from 'semantic-ui-react';\n\nexport default function Footer() {\n  return(\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\n    <Container>\n      <Grid divided inverted stackable>\n        <Grid.Row>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='About' />\n            <List link inverted>\n              <List.Item as='a'>Sitemap</List.Item>\n              <List.Item as='a'>Contact Us</List.Item>\n              <List.Item as='a'>Religious Ceremonies</List.Item>\n              <List.Item as='a'>Gazebo Plans</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <Header inverted as='h4' content='Sources' />\n            <List link inverted>\n              <List.Item as='a' href='https://github.com/MasakiMinamide/M-Governance' target=\"_blank\">\n              <List.Icon name='github' size='large' verticalAlign='middle' />M-Governance</List.Item>\n              <List.Item as='a' href='https://github.com/MasakiMinamide/m-governance-ui' target=\"_blank\">\n              <List.Icon name='github' size='large' verticalAlign='middle' />UI</List.Item>\n              <List.Item as='a' href='https://github.com/paritytech/polkadot' target=\"_blank\">\n              <List.Icon name='github' size='large' verticalAlign='middle' />Polkadot</List.Item>\n              <List.Item as='a' href='https://github.com/paritytech/substrate' target=\"_blank\">\n              <List.Icon name='github' size='large' verticalAlign='middle' />Substrate</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Header as='h4' inverted>\n              Creator: Masaki Minamide\n            </Header>\n            <p><Icon name='github'/><a href='https://github.com/MasakiMinamide' target=\"_blank\">Github</a></p>\n            <p><Icon name='twitter'/><a href='https://twitter.com/masakiminamide' target=\"_blank\">Twitter</a></p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  </Segment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Table, Segment } from 'semantic-ui-react';\n\ninterface Props {\n  api: {query: any; };\n  keyring: {getPairs: any; };\n}\n\nexport default function Balances ({api, keyring}: Props) {\n  const accounts = keyring.getPairs();\n  const addresses = accounts.map((account: { address: string; }) => account.address);\n  const accountNames = accounts.map((account: { meta: { name: string; }; }) => account.meta.name);\n  const [balances, setBalances] = useState<{[s:string]: number; }>({});\n\n  useEffect(() => {\n    let unsubscribeAll: () => void\n\n    api.query.balances.freeBalance\n      .multi(addresses, (currentBalances: { [x: string]: { toString: () => void; }; }) => {\n        const balancesMap: {[s: string]: number} = addresses.reduce((acc: any, address: string, index: string | number) => ({\n          ...acc,\n          [address]: currentBalances[index].toString()\n        }), {});\n        setBalances(balancesMap);\n      })\n      .then((unsub: any) => { unsubscribeAll = unsub; })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.query.balances.freeBalance]);\n\n  return (\n    <Segment>\n      <h1>Balances</h1>\n      <Table celled striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Address</Table.HeaderCell>\n            <Table.HeaderCell>Balance</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {addresses.map((address: string, index: string | number) => {\n            return (\n              <Table.Row key={index}>\n                <Table.Cell textAlign='right'>{accountNames[index]}</Table.Cell>\n                <Table.Cell>{address}</Table.Cell>\n                <Table.Cell>{balances && balances[address]}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </Segment>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { Segment, Image, Grid } from 'semantic-ui-react';\nimport logo from '../images/logo.png';\n\ninterface Props {\n  api: {rpc: any; };\n  blockNumber: string;\n}\ninterface NodeInfo {\n  chain: string;\n  nodeName: string;\n  nodeVersion: string;\n}\n\nexport default function NodeInfo({api, blockNumber}: Props) {\n  const [nodeInfo, setNodeInfo] = useState<NodeInfo>({chain: '', nodeName: '', nodeVersion: ''});\n\n  useEffect(() => {\n    const getInfo = () => {\n      Promise.all([\n        api.rpc.system.chain(),\n        api.rpc.system.name(),\n        api.rpc.system.version(),\n      ])\n      .then(([chain, nodeName, nodeVersion]) => {\n        setNodeInfo ({\n          chain,\n          nodeName,\n          nodeVersion,\n        })\n      })\n      .catch((e) => console.error(e));\n    }\n    getInfo()\n  },[]);\n  \n  return (\n    <Segment className='info'>\n      <Grid colums={2}>\n          <Grid.Column style={{padding:'0', paddingTop:'5px'}}>\n            <Image circular centered src={logo}/>\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Grid.Row>\n              <div className='chain' style={{fontSize:'16px'}}>\n                M-Governance\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div className='chain' style={{fontSize:'16px'}}>\n                {nodeInfo.chain} - {nodeInfo.nodeName} (ver. {nodeInfo.nodeVersion})\n              </div>\n            </Grid.Row>\n            <Grid.Row>\n              <div className='blockNumber' style={{fontSize:'16px', fontWeight:'bold'}}>\n                {`# ${blockNumber}`}\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n      </Grid>\n    </Segment>\n  )\n}","import React, { useState } from 'react';\nimport { Button, Dropdown, Form, Input, DropdownProps, InputOnChangeData, Segment, Message} from 'semantic-ui-react';\n\ninterface Props {\n  api: {query: any, tx: any; };\n  keyring: {getPairs: any, getPair: any ;};\n}\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\n\nexport default function Transfer ({api, keyring} : Props) {\n  const [message, setMessage] = useState({header: \"\", content:\"\", success:false, error:false, warning:false});\n  const initialState = {\n    addressFrom: '',\n    addressTo: '',\n    amount: 0\n  };\n  const [formState, setFormState] = useState(initialState);\n  const { addressTo, addressFrom, amount } = formState;\n  \n  // get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map((account: { address: any; meta: { name: { toUpperCase: () => void; }; }; }) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase()\n  }));\n\n  const onChange = (_: any, data: DropdownProps | InputOnChangeData) => {\n    // formStateの中のdata.stateを変更\n    setFormState(formState => {\n      return {\n        ...formState,\n        [data.state]: data.value,\n      };\n    });\n  };\n  \n  const makeTransfer = () => {\n    const fromPair = keyring.getPair(addressFrom);\n\n    setMessage({...message, header: 'Just one second', content: 'Sending...', warning: true});\n    api.tx.balances\n    .transfer(addressTo, amount)\n    .signAndSend(fromPair, ({ status }: Status) => {\n      if (status.isFinalized) {\n        setMessage({...message, header: 'Transaction Completed!', content:`Completed at block hash #${status.asFinalized.toString()}`, success:true});\n        } else {\n        setMessage({...message, header: '', content: `Current transfer status: ${status.type}`, warning: true});\n        }\n      }).catch((e: any) => {\n        setMessage({...message, header: 'Error', content: ':( transaction failed. Check the log.', error: true});\n        console.error('ERROR:', e);\n      });\n  };\n\n  return (\n    <Segment>\n      <h1>Transfer</h1>\n      <Form>\n        <Form.Field>\n          <Dropdown\n            placeholder='Select from  your accounts'\n            fluid\n            label=\"From\"\n            onChange={onChange}\n            search\n            selection\n            state='addressFrom'\n            options={keyringOptions}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            onChange={onChange}\n            label='To'\n            fluid\n            placeholder='address'\n            state='addressTo'\n            type='text'\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            label='Amount'\n            fluid\n            onChange={onChange}\n            state='amount'\n            type='number'\n          />\n        </Form.Field>\n        <Form.Field>\n          <Button\n            onClick={makeTransfer}\n            primary\n            type='submit'\n          >\n            Send\n          </Button>\n        </Form.Field>\n      </Form>\n      {message.content && <Message\n        success={message.success}\n        error={message.error}\n        warning={message.warning}\n        header={message.header}\n        content={message.content}\n      />}\n    </Segment>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport { Button, Dropdown, Form, Input, DropdownProps, InputOnChangeData, Segment, Message, ButtonContentProps } from 'semantic-ui-react';\nconst helper = require('./helper.tsx');\n\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\ninterface Form {\n  addressFrom: string;\n  voteType: number;\n  expLength: number;\n  data: string;\n  approved: number;\n}\nconst voteTypeOptions = [\n  {key: 0, value: 0, text: 'Normal Vote'},\n  {key: 1, value: 1, text: 'Lock Vote'},\n  {key: 2, value: 2, text: 'Quadratic Vote'}\n];\n\nexport default function CreateVote({api, keyring}: {api:any; keyring:any}) {\n  const [message, setMessage] = useState({header: \"\", content:\"\", success:false, error:false, warning:false});\n    const initialState = {\n        addressFrom: '',\n        voteType: 0,\n        expLength: 0,\n        data: '',\n        approved: 0,\n        key: '',\n    };\n    const [formState, setFormState] = useState<Form>(initialState);\n    const { addressFrom, voteType, expLength, data, approved } = formState;\n    const[ vals, setVals ] = useState<any[]>([]);\n    const [ caOptions, setCaOptions ] = useState<{key: any; value: any; text: string;}[]>([{key: -1, value: -1, text: 'Permissionless'}]);\n\n    const keyringOptions = keyring.getPairs().map((account: { address: any; meta: { name: string; }; }) => ({\n        key: account.address,\n        value: account.address,\n        text: account.meta.name.toUpperCase()\n    }));\n\n    const onChange = (_: any, data: DropdownProps | InputOnChangeData) => {\n        setFormState(FormState => {\n          return {\n            ...FormState,\n            [data.state]: data.value\n          };\n        });\n    }\n\n    const onChangeOption = (_: any, data: InputOnChangeData) => {\n      setVals(prev=>{\n        return{\n          ...prev,\n          [data.state]: data.value\n        }\n      })\n    }\n\n    // get CA list\n    useEffect(() => {\n      let unsubscribe: () => any;\n      api.query.certificateModule.cAData((dataList: number[])=> {\n        for (let index in dataList) {\n          if (parseInt(index) >= 0) {\n          setCaOptions(prev => {\n            return[\n              ...prev,\n              {\n                key: index,\n                value: index,\n                text: helper.hex2a(dataList[index])\n              }\n            ]\n          })\n          }\n        }\n      })\n      .then((unsub: any) => { \n        unsubscribe = unsub; \n      })\n      .catch(console.error);\n  \n      return () => unsubscribe && unsubscribe();\n    }, [])\n\n    const createVote = () => {\n        const fromPair = keyring.getPair(addressFrom);\n        const options:string[] = Object.values(vals).map(val => val)\n        setMessage({...message, header: 'Just one second', content: 'Sending...', warning: true});\n        \n        api.tx.governanceModule\n        .createVote(voteType, expLength, data, approved+1, options)\n        .signAndSend(fromPair, ({status}: Status) => {\n          if (status.isFinalized) {\n            setMessage({...message, header: 'Transaction Completed!', content:`Completed at block hash #${status.asFinalized.toString()}`, success:true});\n            } else {\n            setMessage({...message, header: '', content: `Current transfer status: ${status.type}`, warning: true});\n            }\n        }).catch((e: any) => {\n          setMessage({...message, header: 'Error', content: ':( transaction failed. Check the log.', error: true});\n          console.error('ERROR:', e);\n        });\n    }\n\n    // options\n    const [count, setCount] = useState<number>(2);\n    // add or remove option input\n    const onClickOption= (_: any, data: ButtonContentProps) => {\n      setCount(data.state==='add'?count+1 : count-1);\n    }\n    \n    return (\n        <Segment>\n          <h1>CreateVote</h1>\n          <Segment.Group>\n            <Form>\n                <Form.Field>\n                <Dropdown\n                    placeholder='Select from your accounts'\n                    fluid\n                    label=\"From\"\n                    onChange={onChange}\n                    search\n                    selection\n                    state='addressFrom'\n                    options={keyringOptions}\n                />\n                </Form.Field>\n                <Form.Field>\n                <Dropdown\n                    placeholder='Select Vote type'\n                    fluid\n                    label=\"VoteType\"\n                    onChange={onChange}\n                    search\n                    selection\n                    state='voteType'\n                    options={voteTypeOptions}\n                />\n\n                </Form.Field>\n                <Form.Field>\n                <Input\n                    label='Expire Length'\n                    fluid\n                    onChange={onChange}\n                    state='expLength'\n                    placeholder='BlockNumber: u64'\n                    type='number'\n                />\n                </Form.Field>\n\n                <Form.Field>\n                <Dropdown\n                    placeholder='Select CA from the list'\n                    fluid\n                    label=\"Approved\"\n                    onChange={onChange}\n                    search\n                    selection\n                    state='approved'\n                    options={caOptions}\n                />\n\n                </Form.Field>\n                <Form.Field>\n                <Input\n                    label='Data'\n                    fluid\n                    onChange={onChange}\n                    state='data'\n                    type='string'\n                />\n                </Form.Field>\n                <Form.Field>\n                <div className='ui--Param-Vector-buttons'>\n                  <Button\n                    primary\n                    onClick={onClickOption}\n                    state='add'\n                    content='Add item'\n                    icon='add'\n                  />\n                  <Button\n                    disabled={count === 0}\n                    negative\n                    onClick={onClickOption}\n                    state='remove'\n                    content='Remove item'\n                    icon='minus'\n                  />\n                </div>\n                <div>\n                {[...Array(count).keys()].map(x=> ++x).map((val, i)=>{\n                  return(\n                    <Input\n                        key={i}\n                        onChange={onChangeOption}\n                        label='optionInput'\n                        fluid\n                        placeholder={`option: ${i}`}\n                        state={i}\n                        type='string'\n                    />\n                  )\n                })}\n                </div>\n                </Form.Field>\n\n                <Form.Field>\n                <Button\n                    onClick={createVote}\n                    primary\n                    type='submit'\n                >\n                    Send\n                </Button>\n                </Form.Field>\n            </Form>\n            </Segment.Group>\n          {message.content && <Message\n            success={message.success}\n            error={message.error}\n            warning={message.warning}\n            header={message.header}\n            content={message.content}\n          />}\n\n        </Segment>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Table, Segment} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  api: any;\n  keyring: any;\n  blockNumber: string | number;\n}\n\ninterface VoteToString {\n  id: {toString: () => any};\n  vote_type:  {toString: () => any};\n  approved: { toString: () => any};\n  creator: { toString: () => any};\n  when: { toString: () => any};\n  vote_ends: { toString: () => any};\n  concluded: { toString: () => any};\n}\ninterface Vote {\n  id: number;\n  vote_type:  number;\n  approved: string;\n  creator: string;\n  when: number;\n  vote_ends: string;\n  concluded: string;\n}\n\nexport default function VoteListings ({api, blockNumber}: Props) {\n  const [voteCountState, setVoteCountState] = useState<number>(0);\n  const [votes, setVotes] = useState<Vote[]>([]);\n  const [arrayState, setArrayState] = useState<number[]>([]);\n\n  useEffect(() => {\n    let unsubscribe: () => any;\n    api.query.governanceModule.allVoteCount((count: { words: string; }) => {\n      setVoteCountState(parseInt(count.words));\n    })\n    .then((unsub: any) => { unsubscribe = unsub; })\n    .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.governanceModule.createVote])\n\n  useEffect(() => {\n    let unsubscribeAll: () => any;\n    let voteArray:number[] = [...Array(voteCountState).keys()].map(x=> ++x)\n    setArrayState(voteArray);\n    setVotes([]);\n    api.query.governanceModule.votesByIndex\n      .multi(voteArray, (votes:  VoteToString[]) => {\n        // assign each voteArrayIndex with votes[index] json\n        for(let vote of votes){\n          setVotes(prev => {\n            return[\n              ...prev,\n              {\n                id: vote.id.toString(), \n                vote_type: vote.vote_type.toString(),\n                approved: vote.approved.toString(),\n                creator: vote.creator.toString(),\n                when: vote.when.toString(),\n                vote_ends: vote.vote_ends.toString(),\n                concluded: vote.concluded.toString()\n              }\n            ];\n          })\n        }\n      })\n      .then((unsub: any) => { unsubscribeAll = unsub; })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [voteCountState]);\n  \n  const typeOfVote = (vote_type: any) => {\n    switch(vote_type) {\n      case '0': return \"Vote\";\n      case '1': return \"LockVote\";\n      default: return \"Undefined Vote\";\n    }\n  }\n\n  const colorByExpired = (vote_ends: string) =>{\n    if(parseInt(vote_ends) > blockNumber){\n      return {color: 'green'};\n    } \n    return {color: 'red'};\n  }\n  const colorByBool = (bool: string) =>{\n    if(bool === 'true'){\n      return {color: 'green'}\n    } else{\n      return {color: 'red'}\n    }\n  }\n  return (\n    <Segment.Group>\n      <Segment><h1>Votes: {voteCountState}</h1></Segment>\n      <Segment.Group>\n        <Table celled striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>VoteType</Table.HeaderCell>\n            <Table.HeaderCell>Approved</Table.HeaderCell>\n            <Table.HeaderCell>Creator</Table.HeaderCell>\n            <Table.HeaderCell>When</Table.HeaderCell>\n            <Table.HeaderCell>VoteEnds</Table.HeaderCell>\n            <Table.HeaderCell>Concluded</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {arrayState.map((id: number, index: number) => {\n            return (\n              <Table.Row key={id}>\n                <Table.Cell textAlign='right'><Link to={`/vote/${id}`}>{id}</Link>\n                </Table.Cell>\n                <Table.Cell>{votes[index] && typeOfVote(votes[index].vote_type)}</Table.Cell>\n                {/* TODO: add link to CA*/}\n                <Table.Cell>{votes[index] && votes[index].approved}</Table.Cell> \n                <Table.Cell>{votes[index] && votes[index].creator}</Table.Cell>\n                <Table.Cell>{votes[index] && votes[index].when}</Table.Cell>\n                <Table.Cell style={colorByExpired(votes[index] && votes[index].vote_ends)}>{votes[index] && votes[index].vote_ends}</Table.Cell>\n                <Table.Cell style={colorByBool(votes[index] && votes[index].concluded)}>{votes[index] && votes[index].concluded}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n      </Segment.Group>\n    </Segment.Group>\n  );\n}\n  ","import React, {useState} from 'react';\nimport { Button, Dropdown, Form, DropdownProps, Message, Segment } from 'semantic-ui-react';\nconst helper = require('./helper.tsx');\n\ninterface Props {\n  api: any;\n  keyring: any;\n  id: string| undefined;\n  options: string[];\n}\ninterface Form {\n  addressFrom:string;\n  reference_id?: string;\n  ballot?: number;\n}\n\nexport default function CastBallot({api, keyring, id, options}: Props) {\n  const [message, setMessage] = useState({header: \"\", content:\"\", success:false, error:false, warning:false});\n  const initialState = {\n    addressFrom: '',\n    reference_id: id,\n  };\n  const [formState, setFormState] = useState<Form>(initialState);\n  const { addressFrom, reference_id, ballot } = formState;\n  const ballotOptions = options.map((v,i)=>{\n    return {key: i, value: i, text: helper.hex2a(v)}\n  });\n\n  const keyringOptions = keyring.getPairs().map((account:{address: string; meta:{name: string}}) => ({\n      key: account.address,\n      value: account.address,\n      text: account.meta.name.toUpperCase()\n  }));\n\n  const onChange = (_: any, data: DropdownProps) => {\n    setFormState((FormState:Form) => {\n      return {\n        ...FormState,\n        [data.state]: data.value\n      };\n    });\n  }\n\n  const castBallot = () => {\n    const fromPair = keyring.getPair(addressFrom);\n    setMessage({...message, header: 'Just one second', content: 'Sending...', warning: true});\n\n    api.tx.governanceModule\n    .castBallotWithOptions(reference_id, ballot)\n    .signAndSend(fromPair, ({status}: {status:{isFinalized: boolean; asFinalized: string; type: string; }}) => {\n      if (status.isFinalized) {\n        setMessage({...message, header: 'Transaction Completed!', content:`Completed at block hash #${status.asFinalized.toString()}`, success:true});\n        } else {\n        setMessage({...message, header: '', content: `Current transfer status: ${status.type}`, warning: true});\n        }\n    }).catch((e: any) => {\n      setMessage({...message, header: 'Error', content: ':( transaction failed. Check the log.', error: true});\n      console.error('ERROR:', e);\n    });\n  }\n  return(\n    <Segment>\n      <h1>Cast Ballot</h1>\n      <Form>\n        <Form.Field>\n          <Dropdown\n            placeholder='Select from your accounts'\n            fluid\n            label=\"From\"\n            onChange={onChange}\n            search\n            selection\n            state='addressFrom'\n            options={keyringOptions}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder='Select your answer'\n            label='Ballot'\n            fluid\n            onChange={onChange}\n            search\n            selection\n            state='ballot'\n            options={ballotOptions}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Button\n            onClick={castBallot}\n            primary\n            type='submit'>\n            Send\n          </Button>\n        </Form.Field>\n      </Form>\n      {message.content && <Message\n        success={message.success}\n        error={message.error}\n        warning={message.warning}\n        header={message.header}\n        content={message.content}\n      />}\n    </Segment>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport { Button, Dropdown, Form, DropdownProps, Segment, Message } from 'semantic-ui-react';\n\ninterface Props {\n  api: {query: any, tx: any; };\n  keyring: {getPairs: any, getPair: any ;};\n  id: string;\n  blockNumber: number;\n  vote_ends: number;\n  concluded: string;\n}\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\nexport default function ConcludeVote({ api, keyring, id, blockNumber, vote_ends, concluded } : Props) {\n  const [message, setMessage] = useState({header: \"\", content:\"\", success:false, error:false, warning:false});\n  // when all requirements are set true, clickable\n  const requirements = {\n    isExpired: false,\n    isConcluded: false,\n    isSelected: false\n  };\n  const [clickable, setClickable] = useState(requirements);\n  \n  const { isExpired, isConcluded, isSelected } = clickable;\n\n  const initialState = {\n    addressFrom: '',\n    reference_id: id,\n  };\n  const [formState, setFormState] = useState(initialState);\n  const { addressFrom, reference_id } = formState;\n\n  const keyringOptions = keyring.getPairs().map((account: { address: any; meta: { name: string; }; }) => ({\n      key: account.address,\n      value: account.address,\n      text: account.meta.name.toUpperCase()\n  }));\n\n  const onChange = (_: any, data:DropdownProps) => {\n    setClickable(clickable => {\n      return {\n        ...clickable,\n        isSelected: (data.state === 'addressFrom')? true:false\n      }\n    })\n  \n    setFormState(FormState => {\n      return {\n        ...FormState,\n        [data.state]: data.value\n      };\n    });\n  }\n\n  const concludeVote = () => {\n    const fromPair = keyring.getPair(addressFrom);\n    setMessage({...message, header: 'Just one second', content: 'Sending...', warning: true});\n\n    api.tx.governanceModule\n    .concludeVote(reference_id)\n    .signAndSend(fromPair, ({status}: Status) => {\n      if (status.isFinalized) {\n        setMessage({...message, header: 'Transaction Completed!', content:`Completed at block hash #${status.asFinalized.toString()}`, success:true});\n        } else {\n        setMessage({...message, header: '', content: `Current transfer status: ${status.type}`, warning: true});\n        }\n      }).catch((e: any) => {\n        setMessage({...message, header: 'Error', content: ':( transaction failed. Check the log.', error: true});\n        console.error('ERROR:', e);\n      });\n  }\n\n  useEffect(() => {\n    let unsubscribe: () => any;\n    if (vote_ends < blockNumber) {\n      setClickable(clickable => {\n        return {\n          ...clickable,\n          isExpired: (vote_ends > 0 && vote_ends < blockNumber)?true:false,\n          isConcluded: (concluded === 'true')?true:false,\n        };\n      });\n    }\n    return () => {\n      unsubscribe && unsubscribe();\n    };\n  }, [blockNumber, isSelected, concluded, vote_ends])\n  \n  // TODO:refactor this\n  const isDisabled = (isConcluded: boolean, isSelected:boolean, isExpired: boolean) => {\n    if(!isConcluded && isSelected && isExpired) {\n      return false;\n    }\n    return true;\n  }\n\n  return(\n    <Segment>\n      <h1>Conclude Vote</h1>\n      <ul> Requirements\n        <li>isConcluded: {isConcluded? 'True': 'False'}</li>\n        <li>isExpired: {isExpired? 'True': 'False'}</li>\n        <li>isSelected: {isSelected? 'True':'False'}</li>\n      </ul>\n      <Form>\n        <Form.Field>\n          <Dropdown\n            placeholder='Select from your accounts'\n            fluid\n            label=\"From\"\n            onChange={onChange}\n            search\n            selection\n            state='addressFrom'\n            options={keyringOptions}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Button\n            onClick={concludeVote}\n            disabled={isDisabled(isConcluded, isSelected, isExpired)}\n            primary\n            type='submit'>\n            Conclude\n          </Button>\n        </Form.Field>\n      </Form>\n      {message.content && <Message\n        success={message.success}\n        error={message.error}\n        warning={message.warning}\n        header={message.header}\n        content={message.content}\n      />}\n    </Segment>\n  );\n}","import React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nconst helper = require('./helper.tsx');\n\n\nexport default function ResultChart({options, accounts}: {options:string[]; accounts: string[][]}){\n  const data = {\n    labels: options.map(v=> helper.hex2a(v)),\n    datasets: [{\n      data: accounts.map(v => v.length),\n      backgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56'\n      ],\n      hoverBackgroundColor: [\n      '#FF6384',\n      '#36A2EB',\n      '#FFCE56'\n      ]\n    }]\n  };\n\n  return (\n    <div>\n      <h1>Result Chart</h1>\n      <Doughnut data={data} />\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Segment, Tab } from 'semantic-ui-react';\n\n// components\nimport CastBallot from './castBallot';\nimport ConcludeVote from './concludeVote';\nimport ResultChart from './ResultChart';\n\nconst helper = require('./helper.tsx');\n\ninterface Props {\n  api: any;\n  keyring: any;\n  blockNumber: string;\n}\ninterface VoteState {\n  vote_type: number;\n  approved?: string;\n  creator?: string;\n  vote_ends?: string \n  when?: string\n  concluded?: string\n  data?: string\n}\ninterface VoteToString {\n  vote_type:  {toString: () => any};\n  approved: { toString: () => any};\n  creator: { toString: () => any};\n  when: { toString: () => any};\n  vote_ends: { toString: () => any};\n  concluded: { toString: () => any};\n}\n\n// Details about Vote of specific id\n// query: votesByIndex, voteResult, votedAccounts\n// tx: ballot, conclude, lockvote, withdraw\nexport default function VoteView({api, keyring, blockNumber}: Props) {\n  const { id } = useParams();\n  const [voteState, setVoteState] = useState<VoteState>({vote_type: 0});\n  const { vote_type, approved, creator, vote_ends, when, concluded, data } = voteState;\n  const [optionState, setOptionState] = useState<string[]>([]);\n  const [accounts, setAccounts] = useState<string[][]>([]);\n\n  const panes = [\n    { menuItem: {key: 'voteView', icon: 'info', content: 'VoteView'}, render: ()=> \n    <Tab.Pane>\n      {voteView()}\n      <CastBallot api={api} keyring={keyring} id={id} options={optionState}/>\n      <ResultChart options={optionState} accounts={accounts}/>\n    </Tab.Pane>},\n    { menuItem: {key: 'conclude', icon: 'check circle', content: 'Conclude'}, render: ()=> <Tab.Pane>\n      <ConcludeVote api={api} keyring={keyring} id={id!} vote_ends={parseInt(vote_ends!)} concluded={concluded!} blockNumber={parseInt(blockNumber!)}/>\n    </Tab.Pane>},\n  ]\n\n  // get vote, put it in voteState\n  useEffect(() => {\n    let unsubscribe: () => any;\n    const f = async () => { await api.queryMulti([\n      [api.query.governanceModule.votesByIndex, id],\n      [api.query.governanceModule.data, id],\n      [api.query.governanceModule.voteOptions, id],\n    ], ([vote, data, options]:[VoteToString, string, string[] ]) => {\n      setVoteState({\n        vote_type: vote.vote_type.toString(),\n        approved: vote.approved.toString(),\n        creator: vote.creator.toString(),\n        when: vote.when.toString(),\n        vote_ends: vote.vote_ends.toString(),\n        concluded: vote.concluded.toString(),\n        data: helper.hex2a(data),\n      });\n      setOptionState(options);\n      getAccounts(options);\n    });\n    }\n    f().then((unsub: any) => {unsubscribe = unsub;})\n    .catch(console.error);\n    \n    return () => unsubscribe && unsubscribe();\n  }, [ id ])\n\n  const getAccounts = async (options: string[]) => {\n    let optionArr = [...Array(options.length).keys()].map(x=> ++x);\n    await api.query.governanceModule.accountsByOption\n      .multi(optionArr.map(val => [id, val-1]), (accounts: string[][])=>{\n        setAccounts(accounts);\n    })\n  }\n\n  const typeOfVote = (vote_type: any) => {\n    switch(vote_type) {\n      case '0': return \"Vote\";\n      case '1': return \"LockVote\";\n      default: return \"Undefined Vote\";\n    }\n  }\n\n  const voteView = () => {\n    return(\n      <Segment>\n      <div style={{float:'left'}}><Link to={`/vote/${parseInt(id!)-1}`}><h3>Before</h3></Link></div>\n      <div style={{paddingLeft: '20px', float:'left'}}><Link to={`/vote/${parseInt(id!)+1}`}><h3>Next</h3></Link></div>\n\n      <h1 style={{clear:'both'}}>Vote#{id}</h1>\n      <ul style={{listStyleType:\"none\"}}>\n        <li>Data: {data}</li>\n        <li>CreatedAt# {when}</li>\n        <li>Creator: {creator}</li>\n        <li>VoteType: {typeOfVote(vote_type)}</li>\n        <li>Approved: {approved}</li>\n        <li>VoteEndsAt# {vote_ends}</li>\n        <li>Concluded: {concluded}</li>\n        <li>\n          <ul>Options:\n            {optionState.map((option, index) => {\n              return(\n                <li key={index}>\n                  <ul>{helper.hex2a(option)}: {accounts[index] && accounts[index].length}\n                    {accounts[index] && accounts[index].map((account, i)=>{\n                      return (\n                      <li key={i}>\n                        {account.toString()}\n                      </li>\n                      );\n                    })}\n                  </ul>\n                </li>\n              )\n            })}\n          </ul>\n        </li>\n      </ul>\n      </Segment>\n      \n    );\n  }\n  return(\n    <Segment.Group>    \n      <Tab menu={{color: 'grey', inverted: true}} panes={panes} />\n    </Segment.Group>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown, Form, Table, DropdownProps, Segment, Dimmer, Loader, Image} from 'semantic-ui-react';\n\ndeclare function require(x: string): any;\nconst jwkToPem = require('jwk-to-pem');\nconst utils = require('pvtsutils');\n\nexport default function Provider ({ws, wsReady} : {ws: any, wsReady: boolean}) {\n  const initialOption = [\n    {\n    key: \"None\",\n    value: \"None\",\n    text: \"None\"}\n  ];\n\n  const [selectedProvider, setSelectedProvider] = useState<string | undefined>(\"\");\n  const [providerOptions, setProviderOptions] = useState<{key: string; value: string; text:string;}[]>([]);\n  const [providers, setProviders] = useState<{id: string; name: string; atr: string; }[]>([]);\n  const [items, setItems ] = useState<{index:string; id: string; type: string; subjectName: string}[]>([]);\n\n  const onChange = (_: any, data:DropdownProps) => {\n    setSelectedProvider(data.value?.toString());\n  }\n\n  const refresh = async () => {\n    if(selectedProvider) {\n      getItems(selectedProvider);\n    }\n  }\n\n  async function main() {\n    ws.connect(\"127.0.0.1:31337\")\n      .on(\"error\", function (e: any) {\n        console.error(e);\n      })\n      .on(\"listening\", async (e: any) => {\n        // Check if end-to-end session is approved\n        if (! await ws.isLoggedIn()) {\n          const pin = await ws.challenge();\n          // show PIN\n          setTimeout(() => {\n            alert(\"2key session PIN:\" + pin);\n          }, 100)\n          // ask to approve session\n          await ws.login();\n        }\n        await fillProviders();\n        // if(selectedProvider){\n        //   await getItems(selectedProvider);\n        // }\n        ws.cardReader\n          .on(\"insert\", fillProviders)\n          .on(\"remove\", fillProviders);\n    });\n  }\n  const fillProviders = async() => {\n    ws.info()\n      .then((info: { providers: {id: string; name: string; atr: string}[] }) => {\n        setProviderOptions([]);\n        setProviders([]);\n        for (const index in info.providers){\n          setProviderOptions(oldValues => {\n            return [\n              ...oldValues,\n              {\n                key: info.providers[index].id,\n                value: info.providers[index].id,\n                text: info.providers[index].name\n              }\n            ];\n          })\n          setProviders(oldValues => {\n            return[\n              ...oldValues,\n              {\n                id: info.providers[index].id,\n                name: info.providers[index].name,\n                atr: info.providers[index].atr || \"None\"\n              }\n            ];\n          })\n        }\n      });\n  }\n\n  async function getItems(providerId: string){\n    const crypto = await ws.getCrypto(providerId);\n    // console.log(crypto);\n    await crypto.reset();\n    // Check provider login\n    if (! await crypto.isLoggedIn()) {\n      // Request provider for PIN window\n      await crypto.login();\n    }\n\n    let indexes = await crypto.certStorage.keys();\n    let pubKey;\n\n    setItems([]);\n    // get certification as items\n    for (const index of indexes) {\n      try {\n        const item = await crypto.certStorage.getItem(index);\n\n        if(index === indexes[1]){\n          pubKey = item.publicKey;\n        }\n\n        setItems(items => {\n          return [\n            ...items,\n            {\n              index,\n              id: item.id,\n              type: item.type,\n              subjectName: item.subjectName,\n            }\n          ]\n        })\n      } catch (e) {\n        console.error(`Cannot get ${index} from CertificateStorage`)\n        console.error(e);\n      }\n    }\n\n    // get keys as items\n    indexes = await crypto.keyStorage.keys();\n    for (const index of indexes) {\n      try {\n        const item = await crypto.keyStorage.getItem(index);\n        setItems(items => {\n          return [\n            ...items,\n            {\n              index,\n              id: item.id,\n              type: item.type,\n              subjectName: item.algorithm.name,\n            }\n          ]\n        })\n      } catch (e) {\n        console.error(`Cannot get ${index} from CertificateStorage`)\n        console.error(e);\n      }\n    }\n  }\n  \n  async function downloadItem(e: { preventDefault: () => void; }, index: string){\n    e.preventDefault();\n    try{\n    const crypto = await ws.getCrypto(selectedProvider);\n    // await crypto.reset();\n    if (! await crypto.isLoggedIn()) {\n      await crypto.login();\n    }\n    const parts = index.split(\"-\");\n    let item;\n    let pem;\n    let hex;\n    switch(parts[0]){\n      case \"x509\":\n        item = await crypto.certStorage.getItem(index);\n        pem = await crypto.certStorage.exportCert(\"PEM\", item);\n        break;\n      case \"public\":\n        item = await crypto.keyStorage.getItem(index);\n        const jwk = await crypto.subtle.exportKey(\"jwk\", item);\n        pem = jwkToPem(jwk);\n        hex = utils.Convert.ToHex(pem);\n        break;\n      default: break;\n    }\n    console.log(pem);\n    console.log(hex);\n    // const thumbprint = await crypto.subtle.digest(\"SHA-1\", raw);\n    // console.log(thumbprint);\n\n    // Download the certobject in json\n\n    // let certObj={\n    //   id: cert.id,\n    //   issuerName: cert.issuerName,\n    //   serialNumber: cert.serialNumber,\n    //   version: cert.version,\n    //   providerID: cert.providerID,\n    //   notAfter: cert.notAfter,\n    //   notBefore: cert.notBefore,\n    //   subjectName: cert.subjectName,\n    //   type: cert.type,\n    //   publicKey:{\n    //     algorithm: cert.publicKey.algorithm.name,\n    //     extractable: cert.publicKey.extractable,\n    //     id: cert.publicKey.id,\n    //     hex: utils.Convert.ToHex(cert.raw),\n    //   }\n    // }\n\n    // var dataStr = \"data:text/pem;charset=utf-8,\" + encodeURIComponent(pem);\n    // var downloadAnchorNode = document.createElement('a');\n    // downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    // downloadAnchorNode.setAttribute(\"download\", index + \".pem\");\n    // document.body.appendChild(downloadAnchorNode); // required for firefox\n    // downloadAnchorNode.click();\n    // downloadAnchorNode.remove();\n   }catch(e){console.error(e)}\n  }\n\n  useEffect(() => {\n    let unsubscribe: () => any;\n    if(ws){\n      main()\n      .then((unsub: any) => { \n        unsubscribe = unsub; \n      })\n      .catch(console.error);\n    }\n    return () => unsubscribe && unsubscribe();\n  }, [wsReady, ])\n\n  if(!wsReady){\n    return (\n      <Segment>\n      <Dimmer active inverted>\n        <Loader size='large'>Connecting to WebcryptoSocket.\n        Please install Fortify to use this feature!\n        </Loader>\n        \n      </Dimmer>\n\n      <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n      </Segment>\n    );\n  }\n  return(\n    <Segment>\n      <h2>Enumerate providers and their contents</h2>\n      <Form>\n        <h3>1: Select provider:</h3>\n        <Form.Field>\n        <Dropdown\n          placeholder='Providers'\n          fluid\n          label=\"Providers\"\n          onChange={onChange}\n          search\n          selection\n          state='providers'\n          options={providerOptions.length>0 ? providerOptions : initialOption}\n        />\n        </Form.Field>\n        <Form.Field>\n        <Button\n            onClick={refresh}\n            primary\n            type='submit'\n        >\n            Refresh\n        </Button>\n        </Form.Field>\n      </Form>\n\n      <div>\n        <h3>Providers:</h3>\n        <Table celled striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>ATR</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n        {providers.map((provider, index) => {\n            return (\n              <Table.Row key={index}>\n                <Table.Cell>{provider.id}</Table.Cell>\n                <Table.Cell>{provider.name}</Table.Cell>\n                <Table.Cell>{provider.atr || \"none\"}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n        </Table>\n\n        <h3>Items:</h3>\n        <Table celled striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Index</Table.HeaderCell>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n        {items.map((item, index) => {\n            return (\n              <Table.Row key={index}>\n                <Table.Cell onClick={(e: any) => downloadItem(e, item.index)}>{item.index}\n                </Table.Cell>\n                <Table.Cell>{item.id}</Table.Cell>\n                <Table.Cell>{item.type}</Table.Cell>\n                <Table.Cell>{item.subjectName || \"none\"}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n        </Table>\n      </div>\n    </Segment>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown, Form, Header, DropdownProps, Segment } from 'semantic-ui-react';\nimport { cAPem } from './pemCerts';\nimport {createPKIJSCertificate} from './pkijshelpers';\nconst utils = require('pvtsutils');\nconst pkiJS = require('pkijs');\nconst helper = require('../Vote/helper.tsx');\n\ninterface Props {\n  api: any;\n  keyring: any;\n  ws: any;\n  caOptions: string[];\n}\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\ninterface Options{\n  key: string;\n  value: string;\n  text: string;\n}\nexport default function Register ({api, keyring, ws, caOptions}: Props) {\n  const keyringOptions = keyring.getPairs().map((account: { address: any; meta: { name: string; }; }) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase()\n  }));\n  const CAOptions = caOptions.map((v, i) => ({\n    key: i,\n    value: i,\n    text: helper.hex2a(v)\n  }));\n\n  const [status, setStatus] = useState('');\n\n  const initialState = {\n      addressFrom: '',\n      certificateIndex: '',\n      hexThumbSignature: '',\n      privateKeyIndex: '',\n      CAIndex: 0\n  };\n  const [formState, setFormState] = useState<{addressFrom: string, certificateIndex: string; hexThumbSignature: string; privateKeyIndex: string; CAIndex: number;}>(initialState);\n  const { addressFrom, hexThumbSignature, certificateIndex, CAIndex} = formState;\n\n  const [certificateOptions, setCertificateOptions] = useState<Options[]>([]);\n\n  const [selectedProvider, setSelectedProvider] = useState();\n  const [requirements, setRequirements] = useState<{verified: boolean; validated: boolean; }>({verified: false, validated: false});\n  const { verified, validated } = requirements;\n  const [validateStatus, setValidateStatus] = useState(\"\");\n  const [providerOptions, setProviderOptions] = useState<{key:string, value: string, text: string}[]>([]);\n\n  const onChange = (_: any, data: DropdownProps) => {\n    console.log(data.value);\n      setFormState(FormState => {\n        return {\n          ...FormState,\n          [data.state]: data.value\n        };\n      });\n  }\n  const onChangeProvider = async (_: any, data: DropdownProps) => {\n    setSelectedProvider(data.value);\n    getItems(data.value);\n  }\n\n  const getProviders = async() => {\n    ws.info()\n      .then((info: { providers: [{id: string; name: string}];}) => {\n        setProviderOptions([]);\n        for (const index in info.providers){\n          setProviderOptions(oldValues => {\n            return [\n            ...oldValues,\n            {\n              key: info.providers[index].id,\n              value: info.providers[index].id,\n              text: info.providers[index].name\n            }]\n          });\n        }\n      });\n  }\n\n  const signAccount = async () => {\n    try{\n      const crypto = await ws.getCrypto(selectedProvider);\n      const privateKey: any = await GetCertificateKey(\"private\", crypto, certificateIndex);\n      console.log(privateKey);\n      const alg = {\n        name: privateKey.algorithm.name || \"RSASSA-PKCS1-v1_5\",\n        hash: \"SHA-256\"\n      };\n      const message = utils.Convert.FromUtf8String(addressFrom);\n      console.log(utils.Convert.ToHex(message));\n      const rawSignature = await crypto.subtle.sign(alg, privateKey, message);\n      const thumbSignature = await crypto.subtle.digest(\"SHA-256\", rawSignature);\n      const hexThumbSignature = utils.Convert.ToHex(thumbSignature);\n      setFormState((formState: any)=>{\n        return{\n          ...formState,\n          hexThumbSignature,\n          signature: rawSignature,\n          message\n        };\n      });\n\n      console.log(utils.Convert.ToHex(rawSignature));\n      verify(rawSignature, message);\n      }\n      catch(e){console.error(e)};\n  }\n  \n  const verify = async(signature: {}, message: string) => {\n    const crypto = await ws.getCrypto(selectedProvider);\n    const publicKey = await GetCertificateKey(\"public\", crypto, certificateIndex);\n    const alg = {name: \"RSASSA-PKCS1-v1_5\", hash: \"SHA-256\"};\n    let rsassaPublicKey;\n\n    if(publicKey.algorithm.name === \"RSA-OAEP\"){\n      const spki = await crypto.subtle.exportKey(\"spki\", publicKey);\n      rsassaPublicKey = await crypto.subtle.importKey(\"spki\", spki, {name: \"RSASSA-PKCS1-v1_5\", hash: \"SHA-256\"}, true, [\"verify\"]);\n    }\n    \n    try{\n      const ok = await crypto.subtle.verify(alg, rsassaPublicKey || publicKey, signature, message);\n      setRequirements({\n          verified: ok,\n          validated: validated\n        })\n    }\n    catch (e){\n      console.error(e);\n    }\n  }\n\n  const getItems = async(providerId: any) => {\n    const crypto = await ws.getCrypto(providerId);\n    await crypto.reset();\n\n    if (! await crypto.isLoggedIn()) {\n      await crypto.login();\n    }\n\n    let privateKeys:string[] = [];\n\n    // get Private keys\n    const getKey = async () =>{  \n      const indexes = await crypto.keyStorage.keys();\n      for (const index of indexes) {\n        try {\n          const item = await crypto.keyStorage.getItem(index);\n          if (item.type === \"private\") {\n            privateKeys.push(index);\n          } \n        } catch (e) {\n          console.error(`Cannot get ${index} from CertificateStorage`)\n          console.error(e);\n        }\n      }}\n    \n    // get certs of which id matches with private key.(only takes certs with privatekeys, because sign and verificaiton requires one matching pair of public and privatekey)\n    const getCert = async() => { \n      const certs:string[] = await crypto.certStorage.keys();\n      setCertificateOptions([]);\n      for(const keyId of privateKeys){\n        const keyParts = keyId.split('-');\n      for (const cert of certs) {\n        const certParts = cert.split('-');\n        if(keyParts[2] === certParts[2]){\n        try {\n          const item = await crypto.certStorage.getItem(cert);\n            setCertificateOptions(certificateOptions => {\n              return[\n                ...certificateOptions,\n                {\n                  key: cert,\n                  value: cert,\n                  text: `${GetCommonName(item.subjectName)}: ${cert}`\n                }\n              ]\n            });\n        } catch (e) {\n          console.error(`Cannot get ${cert} from CertificateStorage`)\n          console.error(e);\n        }\n      }}\n    }\n    }\n    await getKey();\n    await getCert();\n  }\n\n  const validate =  async () => {\n    const crypto = await ws.getCrypto(selectedProvider);\n    const item = await crypto.certStorage.getItem(certificateIndex);\n    const userPem = await crypto.certStorage.exportCert(\"PEM\", item);\n\n    const userRaw = createPKIJSCertificate(userPem);\n    const caPem2 = await api.query.certificateModule.cAStore(CAIndex+1);\n\n    const caRaw = createPKIJSCertificate(helper.hex2a(caPem2));\n  \n    const chainValidator = new pkiJS.CertificateChainValidationEngine({\n      certs: [userRaw],\n      trustedCerts: [caRaw]\n    });\n  \n    const { result, resultCode, resultMessage } = await chainValidator.verify();\n    console.log(result, resultCode, resultMessage);\n    setRequirements({\n        verified: verified,\n        validated: result\n    })\n    setValidateStatus(result?\"Validation Successful!\": `Error: ${resultMessage}.`);\n  }\n\n  const GetCertificateKey = async (type: string, provider: any, certID: string) => {\n    const keyIDs = await provider.keyStorage.keys()\n    for (const keyID of keyIDs) {\n      const parts = keyID.split(\"-\");\n      // parts = type-id-certId\n      if (parts[0] === type && parts[2] === certID.split(\"-\")[2]) {\n        const key = await provider.keyStorage.getItem(keyID);\n        if (key) {\n          return key;\n        }\n      }\n    }\n    if (type === \"public\") {\n      const cert = await provider.certStorage.getItem(certID);\n      if (cert) {\n        return cert.publicKey;\n      }\n    }\n    return null;\n  }\n\n  const registerAccount = async () => {\n    const fromPair = keyring.getPair(addressFrom);\n    const crypto = await ws.getCrypto(selectedProvider);\n\n    const cert = await crypto.certStorage.getItem(certificateIndex);\n    const rawCert = await crypto.certStorage.exportCert(\"raw\", cert);\n\n    const thumbCert = await crypto.subtle.digest(\"SHA-256\", rawCert);\n    const hexThumbCert = utils.Convert.ToHex(thumbCert);\n\n    const caPem = await api.query.certificateModule.cAStore(CAIndex+1);\n\n    const caRaw = createPKIJSCertificate(helper.hex2a(caPem));\n    const thumbCA = await crypto.subtle.digest(\"SHA-256\", caRaw.tbs);\n    const hexThumbCA = utils.Convert.ToHex(thumbCA);\n    \n    // console.log(thumbCert);\n    console.log(\"hexThumbPub: \", hexThumbCert);\n    console.log(\"hexThumbCA: \", hexThumbCA);\n\n    setStatus('Sending...');\n\n    await api.tx.certificateModule\n    .registerAccount(\"0x\"+hexThumbCA, \"0x\"+hexThumbCert, \"0x\"+hexThumbSignature)\n    .signAndSend(fromPair, ({status}: Status) => {\n        if (status.isFinalized) {\n        setStatus(`Completed at block hash #${status.asFinalized.toString()}`);\n        } else {\n        setStatus(`Current transfer status: ${status.type}`);\n        }\n    }).catch((e: any) => {\n        setStatus(':( transaction failed');\n        console.error('ERROR:', e);\n    });\n  }\n\n  const main = async () => {\n    ws.connect(\"127.0.0.1:31337\")\n      .on(\"error\", function (e: any) {\n        console.error(e);\n      })\n      .on(\"listening\", async (e: any) => {\n        // Check if end-to-end session is approved\n        if (! await ws.isLoggedIn()) {\n          const pin = await ws.challenge();\n          // show PIN\n          setTimeout(() => {\n            alert(\"2key session PIN:\" + pin);\n          }, 100)\n          // ask to approve session\n          await ws.login();\n        }\n        if(selectedProvider){\n          await getItems(selectedProvider);\n        }\n        await getProviders();\n    });\n  }\n\n  useEffect(() => {\n    if(ws){\n      main();\n    }\n  }, [])\n\n  // const lineMaker = (str: string) =>{\n  //   return str.replace(/(.{100})/g, \"$1 \");\n  // }\n  \n  const canRegister = () => {\n    if(addressFrom && certificateIndex && hexThumbSignature && verified && validated){\n      return false;\n    } \n    return true;\n  }\n  const getColor =(v:boolean)=>{\n    if(v){\n      return {color:\"green\"}\n    }\n    return {color:\"red\"}\n  }\n  \n  return(\n    <Segment>  \n      <h1>Register</h1>\n      <h3>Requirements:</h3>\n      <ul>\n        <li style={getColor(!!formState.addressFrom)}>Account: {formState.addressFrom || \"None\"}</li>\n        <li style={getColor(!!formState.hexThumbSignature)}>Signed Account: {formState.hexThumbSignature || \"None\"}</li>\n        <li style={getColor(!!formState.certificateIndex)}>Certification: {formState.certificateIndex || \"None\"}</li>\n        <li style={getColor(verified)}>Sign Verification: {verified?\"True\":\"False\"}</li>\n        <li style={getColor(validated)}>Cert Validation: {validated?\"True\":\"False\"}</li>\n      </ul>\n      <h2>Sign your Account</h2>\n      <Form>\n            <Form.Field>\n              <Dropdown\n                  placeholder='Select from your accounts'\n                  fluid\n                  label=\"From\"\n                  onChange={onChange}\n                  search\n                  selection\n                  state='addressFrom'\n                  options={keyringOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                  placeholder='Select from your providers'\n                  fluid\n                  label=\"Provider\"\n                  onChange={onChangeProvider}\n                  search\n                  selection\n                  state='provider'\n                  options={providerOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Dropdown\n                  placeholder='Select from your certificates'\n                  fluid\n                  label=\"certificateIndex\"\n                  onChange={onChange}\n                  search\n                  selection\n                  state='certificateIndex'\n                  options={certificateOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button\n                  onClick={signAccount}\n                  primary\n                  type='submit'\n              >\n                  Sign\n              </Button>\n            </Form.Field>\n      </Form>\n      <div style={{whiteSpace: 'pre-line'}}>\n        <Header as='h3'>Signature: </Header>\n        {formState.hexThumbSignature}\n        <h3>Verification: {`${verified}`}</h3>\n      </div>\n      \n      <h2>Select Root CA to validate your certification.</h2>\n      <Form>\n          <Form.Field>\n          <Dropdown\n              placeholder='Select from registered CA'\n              fluid\n              label=\"CAOptions\"\n              onChange={onChange}\n              search\n              selection\n              state='CAIndex'\n              options={CAOptions}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Button\n              onClick={validate}\n              primary\n              type='submit'\n          >\n              Validate Certificate\n          </Button>\n          </Form.Field>\n      </Form>\n      {validateStatus}\n      <Form>\n          <Form.Field>\n          <Button\n              onClick={registerAccount}\n              primary\n              disabled={canRegister()}\n              type='submit'\n          >\n              Register\n          </Button>\n          </Form.Field>\n      </Form>\n      {status}\n    </Segment>\n  );\n} \n\nfunction GetCommonName(name: string) {\n  var reg = /CN=(.+),?/i;\n  var res = reg.exec(name);\n  return res ? res[1] : \"Unknown\";\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown, Form, TextArea, TextAreaProps, DropdownProps, Segment, Message, Input, InputOnChangeData } from 'semantic-ui-react';\nimport {createPKIJSCertificate, removePemArmoring} from './pkijshelpers';\nconst utils = require('pvtsutils');\nconst pkiJS = require('pkijs');\n\ninterface Props {\n  api: any;\n  keyring: any;\n}\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\n\nexport default function RegisterCA ({api, keyring}: Props) {\n  const keyringOptions = keyring.getPairs().map((account: { address: any; meta: { name: string; }; }) => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase()\n  }));\n  const [message, setMessage] = useState({header: \"\", content:\"\", success:false, error:false, warning:false});\n  const [formState, setFormState] = useState<{addressFrom: string; data: string; pem: string}>({addressFrom: '', data: '', pem: ''});\n  const { addressFrom, data, pem } = formState;\n\n  const onChange = (_: any, data: DropdownProps | TextAreaProps | InputOnChangeData) => {\n      setFormState(FormState => {\n        return {\n          ...FormState,\n          [data.state]: data.value\n        };\n      });\n  }\n  const registerCA = async () => {\n    try{\n    const fromPair = keyring.getPair(addressFrom);\n    const rawCA = createPKIJSCertificate(pem);\n    const thumbCA = await crypto.subtle.digest(\"SHA-256\", rawCA.tbs);\n    const hexThumbCA = utils.Convert.ToHex(thumbCA);\n    console.log(hexThumbCA);\n    console.log(rawCA.tbs);\n    const unarmored = removePemArmoring(pem);\n    console.log(unarmored);\n    \n    await api.tx.certificateModule\n    .registerCa(\"0x\"+hexThumbCA, unarmored, data)\n    .signAndSend(fromPair, ({status}: Status) => {\n      if (status.isFinalized) {\n        setMessage({...message, header: 'Transaction Completed!', content:`Completed at block hash #${status.asFinalized.toString()}`, success:true});\n        } else {\n        setMessage({...message, header: '', content: `Current transfer status: ${status.type}`, warning: true});\n        }\n      }).catch((e: any) => {\n        setMessage({...message, header: 'Error', content: ':( transaction failed. Check the log.', error: true});\n        console.error('ERROR:', e);\n      });\n    } catch(e){\n      setMessage({...message, header: 'Error', content: `Registration failed: ${e}`, error: true});\n      console.error('ERROR:', e);\n    };\n  }\n\n  return (\n    <Segment>\n      <Form>\n      <Form.Field>\n        <Dropdown\n            placeholder='Select from your accounts'\n            fluid\n            label=\"From\"\n            onChange={onChange}\n            search\n            selection\n            state='addressFrom'\n            options={keyringOptions}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          label='Data'\n          fluid\n          onChange={onChange}\n          state='data'\n          type='string'\n        />\n      </Form.Field>\n      <Form.Field\n      control={TextArea}\n      onChange={onChange}\n      state='pem'\n      label='pem'\n      placeholder='Paste a PEM formatted text.'\n    />\n      <Form.Field>\n        <Button\n            onClick={registerCA}\n            primary\n            type='submit'\n        >\n            Register\n        </Button>\n      </Form.Field>\n    </Form>\n    {message.content && <Message\n        success={message.success}\n        error={message.error}\n        warning={message.warning}\n        header={message.header}\n        content={message.content}\n      />}\n  </Segment>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Dropdown, Form, Input, Container, Header, DropdownProps, Segment, Table } from 'semantic-ui-react';\nimport { cAPem } from './pemCerts';\nimport {createPKIJSCertificate} from './pkijshelpers';\nimport { Link } from 'react-router-dom';\nconst utils = require('pvtsutils');\nconst pkiJS = require('pkijs');\n\ninterface Props {\n  api: {query: any}\n}\ninterface Status{\n  status: {\n    isFinalized: boolean,\n    asFinalized: string,\n    type: string\n  }\n}\ninterface Options{\n  key: string;\n  value: string;\n  text: string;\n}\nexport default function CAListings ({api}: Props) {\n  const [caCount, setCaCount] = useState(0);\n  const [hashState, setHashState] = useState<string[]>([])\n\n  useEffect(() => {\n    let unsubscribe: () => any;\n    api.query.certificateModule.cAHashes((caHashes: string[]) => {\n      setCaCount(caHashes.length);\n      setHashState(caHashes);\n    })\n    .then((unsub: any) => { unsubscribe = unsub; })\n    .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [])\n\n  return (\n    <Segment.Group>\n    <Segment><h1>Registered Central Authority: {caCount}</h1></Segment>\n    <Segment.Group>\n      <Table celled striped>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>ID</Table.HeaderCell>\n          <Table.HeaderCell>CAHash</Table.HeaderCell>\n          {/* <Table.HeaderCell>Registered Accounts</Table.HeaderCell> */}\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {hashState.map((hash: string, index: number) => {\n          return (\n            <Table.Row key={index}>\n              <Table.Cell textAlign='right'><Link to={`/certificate/${index + 1}/${hash.toString()}`}>{index+1}</Link>\n              </Table.Cell>\n              <Table.Cell>{hash.toString()}</Table.Cell>\n            </Table.Row>\n          );\n        })}\n      </Table.Body>\n    </Table>\n    </Segment.Group>\n  </Segment.Group>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport {Tab} from 'semantic-ui-react';\n\n// import components\nimport Provider from './Provider';\nimport Register from './Register';\nimport RegisterCA from './RegisterCA';\nimport CAListings from './CAListings';\n\n// var protobuf = require(\"protobufjs\");\n// var WebcryptoSocket = require(\"@webcrypto-local/client\");\n// console.log(protobuf);\n\nconst urls = [\"https://peculiarventures.github.io/pv-webcrypto-tests/src/asmcrypto.js\", \"https://peculiarventures.github.io/pv-webcrypto-tests/src/elliptic.js\", \"https://cdn.rawgit.com/dcodeIO/protobuf.js/6.8.0/dist/protobuf.js\", \"https://unpkg.com/@webcrypto-local/client@1.0.14/build/webcrypto-socket.js\", \"https://peculiarventures.github.io/pv-webcrypto-tests/src/webcrypto-liner.min.js\", \"https://cdn.rawgit.com/jakearchibald/idb/97e4e878/lib/idb.js\"];\n\ninterface Props {\n  api: {query: any, tx: any; };\n  keyring: {getPairs: any, getPair: any ;};\n}\ninterface MyWindow extends Window {  \n  WebcryptoSocket: any;\n}  \ndeclare var window: MyWindow;  \n\nexport default function Certificate ({ api, keyring }: Props) {\n  const [ws, setWs] = useState();\n  const [wsReady, setWsReady] = useState(false)\n  const [caOptions, setCaOptions] = useState<string[]>([]);\n\n  const panes = [\n    { menuItem: {key: 'providers', icon: 'rss', content: 'Providers'}, render: ()=> <Tab.Pane><Provider ws={ws} wsReady={wsReady}/></Tab.Pane>},\n    { menuItem: {key: 'register', icon: 'book', content: 'Register'}, render: ()=> <Tab.Pane><Register api={api} keyring={keyring} ws={ws} caOptions={caOptions}/></Tab.Pane>},\n    { menuItem: {key: 'centralAuthority', icon: 'building', content: 'Central Authority'}, render: ()=> <Tab.Pane><CAListings api={api} /></Tab.Pane>},\n    { menuItem: {key: 'registerCA', icon: 'building', content: 'Register CA'}, render: ()=> <Tab.Pane><RegisterCA api={api} keyring={keyring} /></Tab.Pane>},\n  ];\n\n  // load libs\n  useEffect(() => { \n    for (const id in urls) {\n      let tag = document.createElement('script');\n      tag.async = false;\n      tag.src = urls[id];\n      let body = document.getElementsByTagName('body')[0];\n      body.appendChild(tag);\n    }\n    let unsubscribe: () => any;\n    api.query.certificateModule.cAData((ca_data: string[]) =>{\n      setCaOptions(ca_data);\n    }).then((unsub: any) => {unsubscribe = unsub; })\n      .catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  },[]); \n\n  // get webcryptosocket\n  useEffect(() => {\n    window.WebcryptoSocket && init();\n  }, [window.WebcryptoSocket])\n\n  const init = async () => {\n    const WebcryptoSocket = window.WebcryptoSocket;\n    const ws = new WebcryptoSocket.SocketProvider({\n      storage: await WebcryptoSocket.BrowserStorage.create(),\n    });\n    setWs(ws);\n    setWsReady(true);\n  }\n\n  return(\n    <>\n      <Tab menu={{color: 'grey', inverted: true}} panes={panes} />\n    </>\n  );\n}","import React, { useState } from 'react'\nimport { Menu, MenuItemProps } from 'semantic-ui-react'\n\nexport default function SideBar({activeItem,  setActiveItem}: any) {\n  const handleItemClick = (e: any, { name }: MenuItemProps) => setActiveItem(name!);\n\n    return (\n      <Menu vertical>\n        <Menu.Item\n              name='home'\n              active={activeItem === 'home'}\n              onClick={handleItemClick}\n        />\n\n        <Menu.Item>\n          <Menu.Header>Preparation</Menu.Header>\n\n          <Menu.Menu>\n            <Menu.Item\n              name='create account'\n              active={activeItem === 'create account'}\n              onClick={handleItemClick}\n            />\n          </Menu.Menu>\n        </Menu.Item>\n \n        <Menu.Item>\n          <Menu.Header>Vote</Menu.Header>\n\n          <Menu.Menu>\n            <Menu.Item\n              name='create your first vote'\n              active={activeItem === 'create your first vote'}\n              onClick={handleItemClick}\n            />\n            <Menu.Item\n              name='create a vote with CA certificate'\n              active={activeItem === 'create a vote with CA certificatehon'}\n              onClick={handleItemClick}\n              />\n            <Menu.Item\n              name='create a quadratic vote'\n              active={activeItem === 'create a quadratic vote'}\n              onClick={handleItemClick}\n            />\n          </Menu.Menu>\n        </Menu.Item>\n\n        <Menu.Item>\n          <Menu.Header>Ballot</Menu.Header>\n\n          <Menu.Menu>\n            <Menu.Item\n              name='cast your first ballot'\n              active={activeItem === 'cast your first ballot'}\n              onClick={handleItemClick}\n              />\n            <Menu.Item\n              name='cast a lockvote'\n              active={activeItem === 'cast a lockvote'}\n              onClick={handleItemClick}\n            />\n          </Menu.Menu>\n          \n        </Menu.Item>\n\n        <Menu.Item>\n          <Menu.Header>Certificate</Menu.Header>\n\n          <Menu.Menu>\n            <Menu.Item\n              name='register your account'\n              active={activeItem === 'register your account'}\n              onClick={handleItemClick}\n            />\n\n            <Menu.Item\n              name='register new CA'\n              active={activeItem === 'register new CA'}\n              onClick={handleItemClick}\n            />\n          </Menu.Menu>\n        </Menu.Item>\n        <Menu.Item\n              name='FAQ'\n              active={activeItem === 'FAQ'}\n              onClick={handleItemClick}\n        />\n      </Menu>\n    );\n}\n","import React, { useState } from 'react'\nimport { Menu, MenuItemProps } from 'semantic-ui-react'\n\nexport default function Home() {\n  const Paragraph = () => (\n    <p>\n      {[\n        'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum ',\n        'tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas ',\n        'semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ',\n        'ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean ',\n        'fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. ',\n        'Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus, tortor ',\n        'neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi, tincidunt quis, ',\n        'accumsan porttitor, facilisis luctus, metus',\n      ].join('')}\n    </p>\n  )\n  const text = {\n    fontSize: '15px',\n    lineHeight: '1.8',\n  }\n\n    return (\n      <>\n        <h1><code>M-Governance Tutorial</code></h1>\n        <h2><code>Blockchain-based decision making platform</code></h2>\n        <p style={text}>\n        M-Governanceはブロックチェーン上での意思集約をもっと簡単に行うためのプラットフォームです。\n        現状のブロックチェーンの意思決定は結果が決めた事の実行に直結せず、最終的な決定は中央主体に委ねられています。<br/>\n        MーGovernanceでは意思決定結果はPolkadotを通すことで、他のブロックチェーンのスマートコントラクトやランタイムイベントを自律的にトリガーすることが可能です。</p>\n        <p style={text}>\n        さらに最新のクアドラティック投票やロック投票なども提供しており、意思決定事項にとってハイパフォーマンスなモデルやツールを採用できます。\n        CA(Central Authority)により署名された電子証明書を使ってPermissionedな投票を行うことも可能です。<br/>\n\n        このチュートリアルでは投票の作成、投票、CAの登録などを学べます。</p>\n      </>\n    );\n}\n","import React, { useState } from 'react';\nimport { Segment, Container, Grid, Header, List, Icon } from 'semantic-ui-react';\n\nimport SideBar from './SideBar';\n\n// documents\nimport Home from './Docs/Home';\n\nexport default function Tutorial() {\n  const [activeItem, setActiveItem] = useState<string>('home');\n\n  const getDoc = () => {\n    switch (activeItem){\n      case 'home': return <Home />;\n      default: return activeItem;\n    }\n  }\n  return(\n    <Segment>\n      <Grid>\n        <Grid.Row>\n\n        <Grid.Column width={3}>\n          <SideBar setActiveItem={setActiveItem} activeItem={activeItem}/>\n        </Grid.Column>\n\n        <Grid.Column width={10}>\n          <Container>\n            {getDoc()}\n          </Container>\n        </Grid.Column>\n\n      </Grid.Row>\n      </Grid>\n\n    </Segment>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Segment, Tab, Container } from 'semantic-ui-react';\nimport { createPKIJSCertificate } from './pkijshelpers';\nconst helper = require('../Vote/helper.tsx');\n\ninterface Props {\n  api: any;\n  keyring: any;\n}\n\nconst pemStyle = {\n  height: '240px',\n  width: '60%',\n  border:'1px solid #ccc',\n  font:'16px/26px Georgia, Garamond, Serif',\n  overflow:'auto',\n  // whiteSpace: 'pre-line',\n}\nexport default function CertificateView({api, keyring}: Props) {\n  const { index, hash } = useParams();\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [data, setData] = useState<string>();\n  const [pem, setPem] = useState<string>('');\n  const [rawCA, setRawCA] = useState<{notBefore?: {value: string}, notAfter?: {value: string}, version?: string, issuer?:{valueBeforeDecode: ArrayBuffer, typesAndValues:{value:{valueBlock: {value: string}}}[]}}>({});\n\n  useEffect(() => {\n    let unsubscribe: () => any;\n    const f = async() => {\n      await api.queryMulti([\n        [api.query.certificateModule.accountsByCAHash, hash],\n        [api.query.certificateModule.cADataByIndex, index],\n        [api.query.certificateModule.cAStore, index],\n      ], ([accounts, data, hexPem]:[string[], string, string]) => {\n        setAccounts(accounts);\n        setData(helper.hex2a(data));\n        const pem = helper.hex2a(hexPem);\n        setPem(pem);\n        setRawCA(createPKIJSCertificate(pem));\n      })\n    }\n      f()\n      .then((unsub: any) => { \n        unsubscribe = unsub;\n        console.log(rawCA);\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [])\n\n  const lineMaker = (str: string) =>{\n    return str.replace(/(.{150})/g, \"$1\\n\");\n  }\n  return(\n    <Segment>\n      <h1>CertificateView #{index}</h1>\n      <ul>\n        <li>Hash: {hash}</li>\n        <li>Data: {data}</li>\n  <li>notBefore: {rawCA.notBefore && rawCA.notBefore.value.toString()}</li>\n  <li>notAfter: {rawCA.notAfter && rawCA.notAfter.value.toString()}</li>\n  <li>version: {rawCA.version && rawCA.version.toString()}</li>\n  <li>issuer: \n    <ol>\n      {rawCA.issuer && rawCA.issuer.typesAndValues.map((val:{value: {valueBlock:{value: string}}}, i)=>{\n        return  <li key={i}>{val.value.valueBlock.value.toString()}</li>;\n      })}\n    </ol>\n  </li>\n        <li>Accounts: {accounts.length}\n        <ul>\n        {accounts.map((account, index)=>{\n          return(\n            <li key={index}>\n              {account.toString()}\n            </li>\n          );\n        })}\n        </ul></li>\n        <li>Votes</li>\n        <li>Pem: <div style={pemStyle}><p>{lineMaker(pem)}</p></div></li>\n      </ul>\n      \n    </Segment>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// React API\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// Polkadot API\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport keyring from '@polkadot/ui-keyring';\n// Styles, tools\nimport { Container, Dimmer, Loader} from 'semantic-ui-react';\nimport types from './Type';\n// Components\nimport HomepageLayout from './HomepageLayout';\nimport MenuBar from './Menu/MenuBar';\nimport Footer from './Menu/Footer';\nimport Balances from './Transfer/Balances';\nimport NodeInfo from './Menu/NodeInfo';\nimport Transfer from './Transfer/Transfer';\nimport CreateVote from './Vote/createVote';\nimport VoteListings from './Vote/VoteListings';\nimport VoteView from './Vote/VoteView';\nimport Certificate from './Certificate/Certificate';\nimport Tutorial from './Tutorial/Tutorial';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport CertificateView from './Certificate/CertificateView';\n\nexport default function App () {\n  const [api, setApi] = useState();\n  const [apiReady, setApiReady] = useState();\n  const [blockNumber, setBlockNumber] = useState('0');\n  let WS_PROVIDER = 'wss://m-governance.org';\n  console.log(\"WS endpoint=\" + WS_PROVIDER);\n\n  useEffect(() => {\n    const provider = new WsProvider(WS_PROVIDER);\n\n    ApiPromise.create({provider, types})\n      .then((api: { isReady: Promise<any>; }) => {\n        setApi(api);\n        api.isReady.then(() => setApiReady(true));\n      })\n      .catch((e: any) => console.error(e));\n  }, []);\n\n  useEffect(() => { \n    keyring.loadAll({\n      isDevelopment: true\n    });\n  },[]); \n\n  useEffect(() => {\n    if(apiReady){\n      let unsubscribe: () => void;\n      const f = async () => api.rpc.chain.subscribeNewHeads((header: { number: string; }) => {\n        setBlockNumber(header.number);\n      });\n      f().then(unsub => {\n        unsubscribe = unsub;\n      }).catch(console.error);\n      return () => unsubscribe && unsubscribe();\n    }\n  },[apiReady]);\n\n  const loader = function (text: string){\n    return (\n      <Dimmer active>\n        <Loader size='small'>{text}</Loader>\n      </Dimmer>\n    );\n  };\n  \n  if(!apiReady){\n    return loader('Connecting to the blockchain')\n  }\n  \n  return (\n    <Container fluid>\n      <NodeInfo\n        api={api}\n        blockNumber={blockNumber}\n      />\n\n      <Router>\n          <MenuBar/>\n          <Switch>\n            <Route \n              path=\"/vote/:id\" \n              children={<VoteView api={api} keyring={keyring} blockNumber={blockNumber}/>}\n            />\n            <Route path=\"/vote\">\n            <VoteListings\n              api={api}\n              keyring={keyring}\n              blockNumber={blockNumber}\n            />\n            <CreateVote\n              api={api}\n              keyring={keyring}\n            />\n            </Route>\n\n            <Route path=\"/tutorial\">\n              <Tutorial />\n            </Route>\n            <Route path=\"/transfer\">\n            <Balances\n              keyring={keyring}\n              api={api}\n            />\n            <Transfer\n              api={api}\n              keyring={keyring}\n            />\n            </Route>\n            <Route \n              path=\"/certificate/:index/:hash\" \n              children={<CertificateView api={api} keyring={keyring}/>}\n            />\n            <Route path=\"/certificate\">\n              <Certificate\n                api={api}\n                keyring={keyring}\n              />\n            </Route>\n            <Route path=\"/\">\n            <HomepageLayout />\n            </Route>\n          </Switch>\n      </Router>\n      <Footer />\n    </Container>\n  );\n}","const pkiJS = require(\"pkijs\");\nconst asn1js = require(\"asn1js\");\n\nconst createPKIJSCertificate = (pem: string) => {\n  const certArrayBuffer = convertPemToArrayBuffer(removePemArmoring(pem));\n  const asn1data = asn1js.fromBER(certArrayBuffer);\n  return new pkiJS.Certificate({ schema: asn1data.result });\n};\n\nfunction removePemArmoring(pemString: string) {\n  const result = pemString.replace(\n    /((\\n|\\r)?-----BEGIN CERTIFICATE-----(\\n|\\r)?|(\\n|\\r)?-----END CERTIFICATE-----(\\n|\\r)?)/g,\n    \"\"\n  );\n  return result.trim();\n}\n\nfunction convertPemToArrayBuffer(pemString: string) {\n  const buffer = Buffer.from(pemString, \"base64\");\n\n  return new Uint8Array(buffer).buffer;\n}\n\nexport {createPKIJSCertificate, removePemArmoring};","function hex2a(hexx: any) {\n  var hex = hexx.toString();//force conversion\n  var str = '';\n  for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)\n      str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  return str;\n}\n\nexport{hex2a}","module.exports = __webpack_public_path__ + \"static/media/headerImage.921a8a97.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image-01.13287163.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.86ad1536.png\";"],"sourceRoot":""}